

import pandas as pd
import numpy as np
from sklearn.metrics import classification_report
from sklearn.model_selection import train_test_split
from sklearn import svm
import lime
import lime.lime_tabular
np.set_printoptions(suppress = True)
all_data = pd.read_csv(r"E:\PycharmWorkSpace\RansomwareAnalysis\All_Data.csv",header=None)
#将csv转为矩阵
allData_matrix = all_data.values
#生成标签矩阵
allDataLabel_matrix = allData_matrix[:,10]
#从原始矩阵中剔除标签，保留数据
allData_matrix = np.delete(allData_matrix,10,axis=1)
#-----------------------------------------------------------------------------------------------------------------
#SVM
# 将数据随机分为 训练数据：测试数据 = 7 ：3
data_train, data_test, label_train, label_test = train_test_split(allData_matrix,allDataLabel_matrix,test_size=0.3, random_state=0)
classifier = svm.SVC(kernel="linear",C=1000, class_weight="balanced",probability=True)
classifier.fit(data_train,label_train)
result_true, result_pred = label_test, classifier.predict(data_test)

classes = ["Benign","Cerber","CryptoWall","CryptoLocker","Genasom","Jigsaw","Locky","Petya","Reveton","TeslaCrypt"]

print("-->Dataset: ")
print("Cerber:\t\t247",end="\t")
print("CryptoLocker:\t20")
print("CrytoWall:\t47",end="\t")
print("Genasom:\t\t25")
print("Jigsaw:\t\t29",end="\t")
print("Locky:\t\t\t334")
print("Petya:\t\t6",end="\t")
print("Reveton:\t\t126")
print("TeslaCrypt:\t65",end="\t")
print("Benign:\t\t\t241")
print()
print("-->Classification Result:")
print(classification_report(result_true,result_pred))
print("-->F1 value: ",classifier.score(data_test,label_test))

feature_list = ["fc","fr","fs","cr","cs","rs","fp","cp","rp","sp"]

explainer = lime.lime_tabular.LimeTabularExplainer(data_train,feature_names=feature_list,
												   class_names=["Cerber","CryptoLocker","CryptWall","Genasom","Jigsaw","Locky","Petya","Reveton","TeslaCrypt","Benign"],
                                                   discretize_continuous=True)
i = np.random.randint(0,data_test.shape[0])
exp = explainer.explain_instance(data_test[i],classifier.predict_proba,top_labels=10)
exp.save_to_file(r"E:\PycharmWorkSpace\XAI_MalwareClassification\IO-files\test_LIME-SVM.html")
# exp.show_in_notebook(show_table=True, show_all=True)







